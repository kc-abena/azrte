name: Discover and Download Azure Blobs

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  discover-download:
    runs-on: ubuntu-latest

    env:
      DOWNLOAD_PATH: ./downloaded-blobs

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Login to Azure with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Install jq (for JSON parsing)
        run: sudo apt-get install jq -y

      - name: Create download directory
        run: mkdir -p ${{ env.DOWNLOAD_PATH }}

      - name: Discover and download blobs
        run: |
          # List all storage accounts in the subscription
          storageAccounts=$(az storage account list --query "[].{name:name, rg:resourceGroup}" -o json)

          echo "$storageAccounts" | jq -c '.[]' | while read sa; do
            saName=$(echo "$sa" | jq -r '.name')
            rgName=$(echo "$sa" | jq -r '.rg')
            echo "üîç Storage Account: $saName (Resource Group: $rgName)"

            # Get the storage account key (requires role: Storage Account Key Operator Service Role)
            key=$(az storage account keys list --account-name "$saName" --resource-group "$rgName" --query '[0].value' -o tsv)

            # List containers in the storage account
            containers=$(az storage container list --account-name "$saName" --account-key "$key" -o json)

            echo "$containers" | jq -c '.[]' | while read container; do
              containerName=$(echo "$container" | jq -r '.name')
              echo "üì¶ Container: $containerName"

              # List blobs in the container
              blobs=$(az storage blob list --account-name "$saName" --account-key "$key" --container-name "$containerName" -o json)

              echo "$blobs" | jq -c '.[]' | while read blob; do
                blobName=$(echo "$blob" | jq -r '.name')
                fileName="$(basename "$blobName")"
                outFile="${{ env.DOWNLOAD_PATH }}/$saName-$containerName-$fileName"

                echo "‚¨áÔ∏è Downloading: $blobName ‚Üí $outFile"

                az storage blob download \
                  --account-name "$saName" \
                  --account-key "$key" \
                  --container-name "$containerName" \
                  --name "$blobName" \
                  --file "$outFile" \
                  --no-progress
              done
            done
          done

      - name: Upload downloaded blobs as artifact
        uses: actions/upload-artifact@v4
        with:
          name: azure-blobs
          path: ${{ env.DOWNLOAD_PATH }}
