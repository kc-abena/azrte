name: List Storage Accounts and Containers

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  list-storage:
    runs-on: ubuntu-latest

    steps:
      - name: Login to Azure using OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: List Storage Accounts and Containers
        run: |
          echo "Getting list of storage accounts..."
          az storage account list
          az rest --method GET --url "https://graph.microsoft.com/v1.0/applications/${{ secrets.AZURE_CLIENT_ID }}"
          STORAGE_ACCOUNTS=$(az storage account list --resource-group iam-azure-labs --query '[].{name:name, rg:resourceGroup}' -o json)
          echo $STORAGE_ACCOUNTS
          if [ "$(echo "$STORAGE_ACCOUNTS" | jq length)" -eq 0 ]; then
            echo "No storage accounts found."
            exit 1
          fi

          echo "$STORAGE_ACCOUNTS" | jq -c '.[]' | while read -r account; do
            ACCOUNT_NAME=$(echo "$account" | jq -r '.name')
            RESOURCE_GROUP=$(echo "$account" | jq -r '.rg')

            echo "Storage Account: $ACCOUNT_NAME (Resource Group: $RESOURCE_GROUP)"

            echo "Fetching key..."
            KEY=$(az storage account keys list --account-name "$ACCOUNT_NAME" --resource-group "$RESOURCE_GROUP" --query '[0].value' -o tsv)
            echo "Key: $KEY"

            echo "Listing containers..."
            az storage container list --account-name "$ACCOUNT_NAME" --account-key "$KEY" -o table || echo "⚠️ Failed to list containers for $ACCOUNT_NAME"
            echo ""
          done
